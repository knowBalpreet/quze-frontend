{"version":3,"sources":["components/DataView.js","components/Search.js","components/Filters.js","Main.js","serviceWorker.js","index.js"],"names":["DataView","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","hasMore","limit","offset","_this$state","length","setState","react_default","a","createElement","className","react_infinite_scroller_default","loadMore","bind","slice","map","row","index","key","category","icon","type","style","position","bottom","subCategory","title","description","isPaid","price","tooltip","concat","numSubscribers","href","url","target","avgRating","Component","SearchBar","Input","Search","defaultValue","keyword","placeholder","enterButton","onSearch","value","search","CheckboxGroup","Checkbox","Group","Filters","rating","filters","subscribers","applyFilters","assertThisInitialized","filter","_this2","uniqueCategories","toConsumableArray","Set","item","onChange","selected","options","slider","range","min","max","require","Main","displayData","Math","apply","o","initFilter","resetKey","keys","toLowerCase","includes","_this3","console","log","Search_Search","Filters_Filters","onClick","resetDefaults","components_DataView","Boolean","window","location","hostname","match","ReactDOM","render","Main_Main","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.abed25d7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport InfiniteScroll from \"react-infinite-scroller\";\n// import InfiniteScroll from \"react-masonry-infinite\";\nimport { Icon, Tooltip } from 'antd';\n\nclass DataView extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      data: this.props.data,\n      hasMore: true,\n      limit: 10,\n      offset: 10\n    }\n  }\n\n  loadMore() {\n    let { hasMore, offset, data, limit } = this.state;\n    if (offset >= data.length) {\n      hasMore = false;\n    } else {\n      offset = offset + limit;\n    }\n    this.setState({ hasMore, offset })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <InfiniteScroll\n            hasMore={this.state.hasMore}\n            loadMore={this.loadMore.bind(this)}\n            className=\"row\"\n          >\n            {\n              this.state.data.slice(0, this.state.offset).map((row, index) =>\n                <div className=\"col-4\" key={index} >\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      {row.category} <Icon type=\"right\" style={{ position: 'relative', bottom: '3px' }} /> {row.subCategory}\n                    </div>\n                    <div className=\"card-body\">\n                      <h5 className=\"card-title\">{row.title}</h5>\n                      <p className=\"card-text\">{row.description}</p>\n                      <center>\n                        {row.isPaid &&\n                          <h3> { row.price } </h3>\n                        }\n                      </center>\n                    </div>\n                    <div className=\"card-footer\">\n                      <div className=\"row\">\n                        <div className=\"col-md-4\">\n                          <Tooltip title={`Subscribers: ${row.numSubscribers}`}>\n                            <span className=\"fas fa-3x fa-users\"></span>\n                          </Tooltip>\n                        </div>\n                        <div className=\"col-md-4\">\n                          <a href={`http://udemy.com${row.url}`} className=\"btn btn-primary\" target=\"_blank\">View</a>\n                        </div>\n                        <div className=\"col-md-4\">\n                          <Tooltip title={`Average Rating: ${row.avgRating}`}>\n                            <span className=\"fas fa-3x fa-star-of-david\"></span>\n                          </Tooltip>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <br/>\n                  <br/>\n                </div>\n              )\n            }\n          </InfiniteScroll>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DataView;\n","import React, { Component } from 'react'\nimport { Input } from \"antd\";\n\nconst SearchBar = Input.Search;\n\nexport default class Search extends Component {\n  render() {\n    return (\n      <div className=\"m-3 col-md-12\">\n        <SearchBar\n          defaultValue={this.props.keyword}\n          placeholder=\"Search here ...\"\n          enterButton=\"Search\"\n          onSearch={value => this.props.search('search', value)}\n        />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Slider, Checkbox } from 'antd';\n\nconst CheckboxGroup = Checkbox.Group;\n\nexport default class Filters extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      data: this.props.data,\n      rating: this.props.filters.avgRating,\n      subscribers:this.props.filters.numSubscribers\n    }\n    this.applyFilters = this.applyFilters.bind(this)\n  }\n  \n  applyFilters(type, value){\n    this.props.filter(type, value)\n  }\n\n  render() {\n    const uniqueCategories = [...new Set(this.state.data.map(item => item.category))];\n\n    return (\n      <div>\n        <div className=\"card\">\n          <div className=\"card-header\">\n            Filters\n          </div>\n          <div className=\"card-body\">\n            <h6 className=\"card-title\">Category</h6>\n            <CheckboxGroup onChange={(selected) => this.applyFilters('category', selected)} options={uniqueCategories} defaultValue={uniqueCategories}  />\n            <br/>\n            <br/>\n            <h6 className=\"card-title\">Average Rating</h6>\n            <Slider onChange={(range) => this.applyFilters('avgRating', range)} range defaultValue={[this.state.rating.min, this.state.rating.max]} max={this.state.rating.max} />\n            <h6 className=\"card-title\">Subscribers</h6>\n            <Slider onChange={(range) => this.applyFilters('numSubscribers', range)} range defaultValue={[this.state.subscribers.min, this.state.subscribers.max]} max={this.state.subscribers.max} />\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport DataView from './components/DataView';\nimport Search from './components/Search';\nimport Filters from './components/Filters';\n\nimport \"antd/dist/antd.css\"; \nconst data = require('./data.json');\n\nexport default class Main extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       data,\n       displayData: data,\n       filter: {\n         search: '',\n         category: [...new Set(data.map(item => item.category))],\n         avgRating: {\n           min: 0,\n           max: Math.max.apply(Math, data.map(function (o) { return o.avgRating; }))\n          },\n          numSubscribers: {\n            min: 0,\n            max: Math.max.apply(Math, data.map(function (o) { return o.numSubscribers; }))\n         }\n       },\n       initFilter: {\n         search: '',\n         category: [...new Set(data.map(item => item.category))],\n         avgRating: {\n           min: 0,\n           max: Math.max.apply(Math, data.map(function (o) { return o.avgRating; }))\n          },\n          numSubscribers: {\n            min: 0,\n            max: Math.max.apply(Math, data.map(function (o) { return o.numSubscribers; }))\n         }\n       },\n       key: 0,\n       resetKey: 0\n    }\n    this.filter = this.filter.bind(this);\n  }\n\n  filter(type, value){\n    let { data, displayData, key, filter } = this.state;\n    filter[type] = value\n    this.setState({ filter }, () => {\n      displayData = data\n      Object.keys(this.state.filter).map(type => {\n        if (type === 'search'  && this.state.filter.search.length > 0) {\n          displayData = displayData.filter(row => row.title.toLowerCase().includes(this.state.filter[type]) || row.description.toLowerCase().includes(this.state.filter[type]))\n        }\n        if (type === \"category\" && this.state.filter.category.length > 0) {\n          displayData = displayData.filter(row => this.state.filter[type].includes(row.category));\n        }\n        if (type === 'avgRating' && this.state.filter.avgRating.length > 0) {\n          displayData = displayData.filter(row => row.avgRating >= this.state.filter[type][0] && row.avgRating <= this.state.filter[type][1])\n        }\n        if (type === 'numSubscribers' && this.state.filter.numSubscribers.length > 0){\n          displayData = displayData.filter(row => row.numSubscribers >= this.state.filter[type][0] && row.numSubscribers <= this.state.filter[type][1])\n        }\n      })\n      this.setState({ displayData, key:key+1 })\n    })\n  }\n\n  resetDefaults(){\n    this.setState({ filter: this.state.initFilter, resetKey: this.state.resetKey + 1, displayData: this.state.data })\n  }\n\n  render() {\n    console.log('Main', this.state)\n    return (\n      <div className=\"container\" key={this.state.resetKey} >\n        <div className=\"row\">\n        {/* Search filter here */}\n        <Search search={this.filter} keyword={this.state.filter.search} />\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-3\">\n            {/* Filters here */}\n            <Filters data = {this.state.displayData} filter={this.filter} filters={this.state.filter} />\n          </div>\n          <div className=\"col-md-9\">\n          <div className=\"row\">\n            <div className=\"col-md-6\"> <button onClick = {() => this.resetDefaults()} className=\"btn-outline-danger\"> Reset Defaults </button> </div>\n            <div className=\"col-md-6\">\n              <h6 className=\"float-right\">\n                {this.state.displayData.length} results found\n              </h6>\n            </div>\n          </div>\n          <br/>\n          <DataView data = {this.state.displayData} key={this.state.key} />\n          {/* Data here */}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './Main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}